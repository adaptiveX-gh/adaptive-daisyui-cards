# Adaptive Cards Platform API - Environment Variables
# Copy this file to .env and fill in your values

# Server Configuration
PORT=3000
NODE_ENV=development

# ============================================
# LLM Configuration for Content Generation
# ============================================

# Content LLM Provider: openai, anthropic, google, or mock
# This LLM is used for generating presentation structure, outlines, and copy
CONTENT_LLM_PROVIDER=google

# Content LLM Model (provider-specific model names)
# OpenAI models: gpt-4, gpt-4-turbo, gpt-3.5-turbo
# Anthropic models: claude-3-opus-20240229, claude-3-sonnet-20240229, claude-3-haiku-20240307
# Google models: gemini-pro, gemini-pro-vision, gemini-1.5-pro, gemini-2.0-flash-exp
CONTENT_LLM_MODEL=gemini-1.5-pro

# API Keys for Content LLM (only one is needed based on your provider)
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here
GOOGLE_API_KEY=your_google_api_key_here

# Enable mock mode for content generation (true/false)
# When true, uses mock responses instead of calling the actual LLM API
LLM_MOCK_MODE=false

# ============================================
# Image Generation Configuration
# ============================================

# Image Generation Provider: gemini, dalle, stability, or placeholder
# This determines which AI service generates images for your presentations
IMAGE_GENERATION_PROVIDER=gemini

# Image Generation Model (provider-specific model names)
# Google Imagen: imagen-3.0-generate-001, imagen-3.0-fast-generate-001
# OpenAI DALL-E: dall-e-3, dall-e-2
# Stability AI: stable-diffusion-xl-1024-v1-0, stable-diffusion-v1-6
IMAGE_GENERATION_MODEL=imagen-3.0-generate-001

# Google Gemini API Key (get from https://makersuite.google.com/app/apikey)
# Note: GOOGLE_API_KEY (above) and GEMINI_API_KEY can be the same key
GEMINI_API_KEY=your_gemini_api_key_here

# Enable mock mode for Gemini if API is not available (true/false)
GEMINI_MOCK_MODE=false

# Image generation timeout in milliseconds (default: 30000 = 30 seconds)
IMAGE_GENERATION_TIMEOUT=30000

# Enable fallback chain (true/false)
IMAGE_FALLBACK_ENABLED=true

# Default placeholder style (geometric, pattern, solid)
PLACEHOLDER_STYLE=geometric

# SSE Streaming Configuration - Phase 3
# Maximum concurrent SSE connections (default: 100)
SSE_MAX_CONNECTIONS=100

# Maximum concurrent connections per IP address (default: 10)
SSE_MAX_CONNECTIONS_PER_IP=10

# Heartbeat interval in milliseconds to keep connections alive (default: 15000 = 15 seconds)
SSE_HEARTBEAT_INTERVAL=15000

# Connection timeout in milliseconds (default: 120000 = 2 minutes)
SSE_CONNECTION_TIMEOUT=120000

# Stage delay in milliseconds for demo/testing (default: 0 = no delay)
SSE_STAGE_DELAY=0

# Enable SSE compression (default: false, experimental)
ENABLE_SSE_COMPRESSION=false

# ============================================
# Configuration Examples
# ============================================

# Example 1: Use GPT-4 for content + DALL-E 3 for images (premium setup)
# CONTENT_LLM_PROVIDER=openai
# CONTENT_LLM_MODEL=gpt-4-turbo
# IMAGE_GENERATION_PROVIDER=dalle
# IMAGE_GENERATION_MODEL=dall-e-3
# OPENAI_API_KEY=your_key_here

# Example 2: Use Claude Opus for content + Gemini Imagen for images (mixed providers)
# CONTENT_LLM_PROVIDER=anthropic
# CONTENT_LLM_MODEL=claude-3-opus-20240229
# IMAGE_GENERATION_PROVIDER=gemini
# IMAGE_GENERATION_MODEL=imagen-3.0-generate-001
# ANTHROPIC_API_KEY=your_claude_key_here
# GOOGLE_API_KEY=your_google_key_here

# Example 3: Use Gemini 1.5 Pro for everything (most cost-effective, single provider)
# CONTENT_LLM_PROVIDER=google
# CONTENT_LLM_MODEL=gemini-1.5-pro
# IMAGE_GENERATION_PROVIDER=gemini
# IMAGE_GENERATION_MODEL=imagen-3.0-fast-generate-001
# GOOGLE_API_KEY=your_google_key_here

# Example 4: Development mode with placeholders (no API keys needed)
# CONTENT_LLM_PROVIDER=mock
# IMAGE_GENERATION_PROVIDER=placeholder
# LLM_MOCK_MODE=true

# ============================================
# Future Provider API Keys (Optional)
# ============================================

# Stability AI API Key for Stable Diffusion (Phase 2+)
# STABILITY_API_KEY=your_stability_api_key_here
